---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: spring-boot-example-v1
  labels:
    app: spring-boot-example
spec:
  selector:
    matchLabels:
      app: spring-boot-example
  replicas: 4
  template:
    metadata:
      labels:
        app: spring-boot-example
        version: "v1"
    spec:
      containers:
        - name: spring-boot-example
          image: gcr.io/fleet-resolver-237016/spring-boot-example:v1
          ports:
            - containerPort: 8080
#           readinessProbe:
#             httpGet:
#               path: /lazy
#               port: 8080
#             initialDelaySeconds: 5
#             periodSeconds: 5
  strategy:
    canary:
#       stableService: spring-boot-example
      canaryService: spring-boot-example
      trafficRouting:
        istio:
           virtualService: 
             name: realapp
      steps:
      - setWeight: 20
      - pause: 
          duration: "20s"
      - setWeight: 50
      - pause: {}
---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-example
  labels:
    name: spring-boot-example
    version: "v1"
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app: spring-boot-example
    version: "v1"
  type: LoadBalancer
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: realapp-gateway
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: realapp
spec:
  hosts:
  - "*"
  gateways:
  - realapp-gateway
  http:
  - match:
    - uri:
        exact: /lazy/*
    route:
    - destination:
        host: spring-boot-example
        port:
          number: 8080

